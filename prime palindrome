class Solution {
    public int primePalindrome(int n) {
        if (n <= 1) return 2;
        int p = n;
        while (true) {
            if (isPalindrome(p) && isPrime(p)) {
                return p;
            }
            p++;
            if (p > 11 && isEvenLength(p)) {
                p = (int) Math.pow(10, (int) Math.log10(p) + 1) + 1

      }
     }
    }

    private boolean isPalindrome(int num) {
        int ori = num, rev = 0;
        while (num > 0) {
            int digit = num % 10;
            rev = rev * 10 + digit;
            num /= 10;
        }
        return ori == rev;
    }

    private boolean isPrime(int num) {
        if (num < 2) return false;
        if (num == 2) return true;
        if (num % 2 == 0) return false;
        for (int i = 3; i <= Math.sqrt(num); i += 2) {
            if (num % i == 0) return false;
        }
        return true;
    }

    private boolean isEvenLength(int num) {
        int len = 0;
        while (num > 0) {
            num /= 10;
            len++;
        }
        return len % 2 == 0;
    }
}
